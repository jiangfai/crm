<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 1,创建数据源对象 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/crm?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	
	<!-- 2,创建SPring提供的SessionFactory对象 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 替换hiberante.cfg.xml的文件 -->
		<!-- 1),替换hiberante配置文件中的数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 2),替换hibernate配置文件中的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<!-- 3),替换注册实体mapping -->
		<property name="mappingResources">
			<array>
				<value>com/crm/pojo/CrmClass.hbm.xml</value>
				<value>com/crm/pojo/CrmCourseType.hbm.xml</value>
				<value>com/crm/pojo/CrmDepartment.hbm.xml</value>
				<value>com/crm/pojo/CrmFollow.hbm.xml</value>
				<value>com/crm/pojo/CrmGraduate.hbm.xml</value>
				<value>com/crm/pojo/CrmPost.hbm.xml</value>
				<value>com/crm/pojo/CrmRefer.hbm.xml</value>
				<value>com/crm/pojo/CrmRunoff.hbm.xml</value>
				<value>com/crm/pojo/CrmStaff.hbm.xml</value>
				<value>com/crm/pojo/CrmStation.hbm.xml</value>
				<value>com/crm/pojo/CrmStudent.hbm.xml</value>
			</array>
		</property>
	</bean>
	
	<!-- 3,创建DAO对象，注入sessionFactory -->
	<bean id="crmDepartmentDao" class="com.crm.dao.impl.CrmDepartmentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="crmPostDao" class="com.crm.dao.impl.CrmPostDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="crmStaffDao" class="com.crm.dao.impl.CrmStaffDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 4,创建服务层对象，注入dao -->
	<bean id="crmDepartmentService" class="com.crm.service.impl.CrmDepartmentServiceImpl">
		<property name="crmDepartmentDao" ref="crmDepartmentDao"></property>
	</bean>
	<bean id="crmPostService" class="com.crm.service.impl.CrmPostServiceImpl">
		<property name="crmDepartmentDao" ref="crmDepartmentDao"></property>
		<property name="crmPostDao" ref="crmPostDao"></property>
	</bean>
	<bean id="crmStaffService" class="com.crm.service.impl.CrmStaffServiceImpl">
		<property name="crmDepartmentDao" ref="crmDepartmentDao"></property>
		<property name="crmPostDao" ref="crmPostDao"></property>
		<property name="crmStaffDao" ref="crmStaffDao"></property>
	</bean>
	
	
	<!-- 5,创建Spring提供的事务通知对象 -->
	<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 6,创建事务通知切面 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 7,AOP整合编程 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.crm.service.*.*(..))" id="mypoint"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint"/>
	</aop:config>
	
	<!-- Spring整合表现层 -->
	<!-- 1,2配置注解处理器映射器和注解处理器适配器 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 3,配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"></bean>
	
	<!-- 4,添加注解扫描 -->
	<context:component-scan base-package="com.crm.action"></context:component-scan>
	
	<!-- 5,配置文件类型解析器 
	id的名称在中央控制器已经定义为常量，不能修改
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 对文件限定大小 -->
		<property name="maxUploadSize" value="10240000"></property>
	</bean>
	
</beans>